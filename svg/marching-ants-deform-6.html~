<!DOCTYPE html>
<html><head>
 <title>Marching Ants: Simple SVG Animation</title>
<meta charset="utf-8">
<link rel="stylesheet" type="text/css" href="http://ic00408/css/log.css" media="all">
<link rel="stylesheet" type="text/css" href="http://ic00408/js/jQuery.UI.Combined.1.8.20.1/Content/Content/themes/base/jquery.ui.all.css">
<link rel="stylesheet" href="logo-maker/css/logo-maker-1.css">
<link rel="stylesheet" href="http://ic00408/css/green-form.css" >
<style>
svg {
background-color: /*fuchsia;*/ #aaa;
}
/*
.cell {
    display: none;
}
#bottom-middle-cell {
    display: block; 
}
*/
.a {
    color: #ed1c24;
}
.b {
    color: #f68b1f;
}
.c {
    color: #00a651;
}
.d {
    color: #00abbd;
}
.e {
    color: #ffa;
    background-color: #aaa;
}

#font-form {
    display: none;
}

.font-form-on {
    float: right;
    clear: left;
}

/* override #panel  styles */
#panel fieldset {
    width: 400px;
}

/* for the font-distort form */

#distort-font ul {
    list-style: none;
    padding: 0;
    margin: 0;
    border: 0;   
    width: 400px;
}

#distort-font li {

}

#distort-font label {
    cursor: pointer;
}

#distort-font li.expand {
    width: 400;
}

#panel input,
#panel input[type="range"] {
    display: inline-block;
}

#panel li.expand span {
    display: inline-block;
    width: 4em;
    text-align: right;
}
</style>


<script src="http://ic00408/js/jquery-1.7.1.js"></script>
<script src="http://ic00408/js/jQuery.UI.Combined.1.8.20.1/Content/Scripts/jquery-ui-1.8.20.js"></script>
<script src="http://ic00408/js/d3.v3.js"></script>
<script src="http://ic00408/js/log-2.js"></script>
<script src="http://ic00408/js/data.js"></script>
<script src="http://ic00408/js/form-save-restore.js"></script>
<script src="http://ic00408/js/binary-hex-conversions.js"></script>
<script src="http://ic00408/js/example-library.js"></script>
<script src="http://ic00408/js/svg-transform.js"></script>
<script src="logo-maker/js/logo-maker-1.js" ></script>

<script>

function getTranslationArray (transform) {
	var translateRegx = /translate\(((?:-)?[0-9]*(?:.)?[0-9]*),((?:-)?[0-9]*(?:.)?[0-9]*)\)/;
	var matchArray = new Array();
	matchArray = transform.match(translateRegx);

	return matchArray;
}

function getScaleArray (transform) {
	var translateRegx = /scale\(((?:-)?[0-9]*(?:.)?[0-9]*)\)/;
	var matchArray = new Array();
	matchArray = transform.match(translateRegx);

	return matchArray;

}

var currentCell = {
	id: null,
};

function enlargeCell (evt) {
	$('.cell').css('display','none');
  $('#font-form').show(200,'easeOutBack');
	var id = $(this).attr('id');
	var transform = $('#' + id).attr('transform');

	currentCell = {
		id: id,
		transform: transform
	};
	var cell = $(this);
	cell
		.attr('transform', 'scale(2) translate(75,10)')
		.css('display','block');	
		
	$(this).unbind('click').bind('click',shrinkCell);
	return false;
}

function shrinkCell (evt) {
	$('.cell').css('display','block');
	$('#font-form').hide(200,'easeInBack');
  var cell = $(this);
	cell
		.attr('transform',currentCell.transform);

	$(this).unbind('click').bind('click',enlargeCell);
	return false;
}

function toggleFormInputType (evt) {
	var id = '#' + $(this).attr('for');
	var parent = $(this).parent();
	var type = $(id).attr('type');
	switch (type) {
	case 'text':
	  d3.select(id).attr('type','range');
		var maximum = d3.select(id).attr('max');
		var minimum = d3.select(id).attr('min');
		d3.select(id + '::before').style('content',minimum);
		d3.select(id + '::after').style('content',maximum);
		parent.animate({'width': 400},500,'linear');
		break;
	case 'range':
		parent.animate({'width': 400},500,'linear');
		d3.select(id + '::before').style('content','');
		d3.select(id + '::after').style('content','');
	  d3.select(id).attr('type','text');
		break;
	}

}

function adjustImage(filterImageId, ellipseId) {
	var I = new Image();
	var node;
	var xlink = 'http://www.w3.org/1999/xlink';
	node = document.getElementById(filterImageId);
	I.src = node.getAttributeNS(xlink,'href');
	var height = I.height;
	var width = I.width;
	node.setAttribute('height', height);
	node.setAttribute('width',width);
	
	node2 = document.getElementById(ellipseId);
	node2.setAttribute('rx', parseInt(width)/2);
	node2.setAttribute('ry', parseInt(height)/2);
	node2.setAttribute('cx', parseInt(height)/3);
	node2.setAttribute('cy', parseInt(width)/3);
}




$(document).ready(function () {
	$('.cell').bind('click', null, enlargeCell);
	$('#distort-font .expand label')
		.click(null,toggleFormInputType);
		

});


</script>
</head>
<body>
<!--
  stroke-linecap  = butt, round, square, inherit
  stroke-linejoin = miter, round, bevel, inherit
  stroke-miterlimit = some limit
  stroke-opacity = 0.0-1.0


-->
<h4>Click On <span class="e">Border</span> or <span class="a">C</span><span class="a">o</span><span class="b">l</span><span class="c">o</span><span class="d">r</span><span class="a">e</span><span class="b">d</span>
<span class="c">G</span><span class="d">r</span><span class="a">a</span><span class="b">d</span><span class="c">i</span><span class="d">e</span><span class="a">n</span><span class="b">t</span>
  to Expand/Restore Individual Cells</h4>
<svg 
    xmlns:svg="http://www.w3.org/2000/svg" 
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    version="1.0" 
    x="0" 
    y="0" 
    width="900"
    height="970" 
    viewBox="0 0 900 970">
   <defs>
   <radialGradient id="radial-grad-50" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="red" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="red" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="red" stop-opacity="0"></stop>
 <stop offset="15%" stop-color="green" stop-opacity="1"></stop>
 <stop offset="20%" stop-color="green" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="green" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="blue" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="blue" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="blue" stop-opacity="0"></stop>
</radialGradient>
<radialGradient id="radial-grad-51" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="#faf" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="#faf" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="#faf" stop-opacity="0"></stop>
 <stop offset="15%" stop-color="#faf" stop-opacity="1"></stop>
 <stop offset="20%" stop-color="#faf" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="#faf" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="#faf" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="#faf" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="#faf" stop-opacity="0"></stop>
</radialGradient>
   <radialGradient id="radial-grad-52" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="red" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="red" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="red" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="green" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="blue" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="blue" stop-opacity="1"></stop>
 <stop offset="75%" stop-color="yellow" stop-opacity="0"></stop>
 <stop offset="85%" stop-color="yellow" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="blue" stop-opacity="0"></stop>
</radialGradient>
<radialGradient id="radial-grad-53" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="#fff" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="#fff" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="#fff" stop-opacity="0"></stop>
 <stop offset="15%" stop-color="#faa" stop-opacity="1"></stop>
 <stop offset="20%" stop-color="#faa" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="#faa" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="#aaf" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="#aaf" stop-opacity="1"></stop>
 <stop offset="75%" stop-color="#aaf" stop-opacity="0"></stop>
 <stop offset="85%" stop-color="#ffa" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="#ffa" stop-opacity="0"></stop>
</radialGradient>
<radialGradient id="radial-grad-54" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="#ed1c24" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="#ed1c24" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="#f68b1f" stop-opacity="0"></stop>
 <stop offset="15%" stop-color="#f68b1f" stop-opacity="1"></stop>
 <stop offset="20%" stop-color="#00a651" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="#00a651" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="#00abbd" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="#00abbd" stop-opacity="1"></stop>
 <stop offset="75%" stop-color="#f68b1f" stop-opacity="0"></stop>
 <stop offset="85%" stop-color="#ed1c24" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="#00abbd" stop-opacity="0"></stop>
</radialGradient>
<radialGradient id="radial-grad-55" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="#547b80" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="#547b80" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="#67ada9" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="#67ada9" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="#e18256	" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="#e18256" stop-opacity="1"></stop>
 <stop offset="75%" stop-color="#cae2aa" stop-opacity="0"></stop>
 <stop offset="85%" stop-color="#cae2aa" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="#e18256" stop-opacity="0"></stop>
</radialGradient>
<radialGradient id="radial-grad-bright" color-interpolation="sRGB" spreadMethod="repeat">
 <stop offset="0" stop-color="#f15a22" stop-opacity="0"></stop>
 <stop offset="5%" stop-color="#f15a22" stop-opacity="1"></stop>
 <stop offset="10%" stop-color="#fcee22" stop-opacity="0"></stop>
 <stop offset="15%" stop-color="#fcee22" stop-opacity="1"></stop>
 <stop offset="20%" stop-color="#b2d235" stop-opacity="0"></stop>
 <stop offset="25%" stop-color="#b2d235" stop-opacity="1"></stop>
 <stop offset="30%" stop-color="#ab4a9c" stop-opacity="0"></stop>
 <stop offset="35%" stop-color="#ab4a9c" stop-opacity="1"></stop>
 <stop offset="75%" stop-color="#ed1164" stop-opacity="0"></stop>
 <stop offset="85%" stop-color="#ed1164" stop-opacity="1"></stop>
 <stop offset="100%" stop-color="b2d235" stop-opacity="0"></stop>
</radialGradient>

<radialGradient id="radial-grad-3" color-interpolation="sRGB" spreadMethod="repeat" >
 <stop offset="0%" stop-color="#FFF" stop-opacity="0.0" />
 <stop offset="5%" stop-color="rgb(255,51,204)" stop-opacity="0.5" />
 <stop offset="10%" stop-color="rgb(0,204,255)" stop-opacity="1" />
</radialGradient>

 <!-- black to white gradient  -->
<linearGradient id="btw-1" color-interpolation="sRGB" spreadMethod="repeat" >
 <stop offset="0%" stop-color="#456" stop-opacity="0.0" />
 <stop offset="30%" stop-color="#abc" stop-opacity="0.8" />
 <stop offset="80%" stop-color="#123" stop-opacity="0.2" />
 <stop offset="100%" stop-color="#faa" stop-opacity="1" />
</linearGradient>

<!-- white to black (reverse direction of base gradient -->
<linearGradient id="btw-2" xlink:href="#btw-1" x1="100%" y1="0%" x2="0" y2="0%" />
<!-- black to white at diagonal -->
<linearGradient id="btw-3" xlink:href="#btw-1" x1="0" y1="0" x2="100%" y2="100%" />
<linearGradient id="btw-4" color-interpolation="sRGB" spreadMethod="repeat" >
 <stop offset="0%" stop-color="#000" stop-opacity="0.0" />
 <stop offset="5%" stop-color="#000" stop-opacity="0.8" />
 <stop offset="10%" stop-color="#000" stop-opacity="0" />
</linearGradient>

<image 
   id="imageFilter" 
   xlink:href="../images/Butterfly%206.jpg" 
   />
 <filter id="image-filter-1" color-interpolation-filters="sRGB"
     x="0" y="0" width="100%" height="100%">
   <feImage id="imageX" xlink:href="../images/Butterfly%2062.jpg"
    result="tile" height="400" width="600"/>
   <feTile in="tile" result="tile" />
   <!--<feTile in="tile" result="tile" />-->
   <feComposite in2="SourceGraphic" in="tile" operator="in" result="super-tile"
    /> <!--k1="0" k2="1" k3="1" k4="0"
    
   <feTile in="super-tile" result="super-tile" /> -->
</filter>
</defs>

<g id="translate" transform="translate(0,0)" >
 <g id="skewX" transform="skewX(0)">
  <g id="skewY" transform="skewY(0)">
   <g id="rotate" transform="rotate(0)">
<!-- start of cells -->
<g transform="translate(0,0)" id="top-left-cell" class="cell"> 
 <rect  x="10" y="10" rx="50" ry="80"
  height="300" 
  width="270" 
  stroke="white"
  stroke-width="20"
  />
 <rect id="top-left-rect" x="10" y="10" rx="50" ry="80"
  height="300" 
  width="270" 
  fill="white"
  stroke-linecap="round"
  stroke-dashoffset="0"
  stroke-width="20"
  stroke-dasharray="1 40"
  style="stroke: url(#radial-grad-3);" >
  <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="41" dur="1s" repeatCount="indefinite" />

 </rect>
 <g transform="translate(30,30)">
 <circle cx="130" cy="130" r="50" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: rgba(255,51,204,.5); stroke-opacity: 1"> 
 <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
    from="20" to="100" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="3s" dur="10s"
    from="10" to="100" repeatCount="indefinite" />
 </circle>
 <circle cx="100" cy="100" r="50" fill="none"
   stroke-width="10" 
   style="stroke-dasharray: 20; stroke: rgba(0,204,255,.5);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="-40" dur="2s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="10s" dur="10s"
   from="10" to="100" repeatCount="indefinite" />
   <animate attributeName="r" begin="12s" dur="11s" 
    from="50" to="5" repeatCount="indefinite" />
 </circle>
 </g>
</g>

<g transform="translate(300,0)" id="top-middle-cell"  class="cell">
<g transform="translate(30,30)">
 <circle cx="130" cy="130" r="50" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: url(#radial-grad-51); stroke-opacity: 1">
   <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="10s"
   from="10" to="200" repeatCount="indefinite" />
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
   from="20" to="100" repeatCount="indefinite" />
   
 </circle>
 <circle cx="100" cy="100" r="50" fill="none" stroke-width="10" 
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-50);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="40" dur="2s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="10s" dur="10s"
   from="10" to="100" repeatCount="indefinite" />
 </circle>
 </g>
 <rect id="top-middle-rect" x="10" y="10" height="300" width="270" fill="none" stroke-linecap="round"  stroke-linejoin="round"
  style="stroke-dasharray: 30 30; stroke-width: 10; stroke: #ffa;" stroke-dashoffset="15">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="-60" dur="3s" repeatCount="indefinite" />
 </rect>
</g>

<g transform="translate(600,0)" id="top-right-cell" class="cell">
<g transform="translate(30,30)">
 <circle cx="130" cy="130" r="50" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: url(#radial-grad-51); stroke-opacity: 1"> 
   <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="10s"
   from="10" to="200" repeatCount="indefinite" />

   
 </circle>
 <circle cx="100" cy="100" r="50" fill="none" stroke-width="10" 
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-50);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="40" dur="2s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="10s" dur="10s"
   from="10" to="100" repeatCount="indefinite" /> 
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
   from="1" to="200" repeatCount="indefinite" />
 </circle>
 </g>
 <rect id="top-right-rect" x="10" y="10" height="300" width="270" fill="none" stroke-linecap="round"  stroke-linejoin="round"
  style="stroke-dasharray: 30 30; stroke-width: 10; stroke: #ffa;" stroke-dashoffset="15">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="60" dur="3s" repeatCount="indefinite" />
 </rect>
 </g>
 
<!-- !!!!!!!!!!!!!!!! MIDDLE ROW !!!!!!!!!!!!!! -->

<g transform="translate(0,320)" id="middle-left-cell" class="cell">
<g transform="translate(87,95)">
<g transform="scale(.5)" >
 <!--<circle cx="130" cy="130" r="200" fill="none" stroke-width="10" 
   filter="url(#image-filter-1)"
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-53);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="40" dur="7s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="0s" dur="13s"
   from="1" to="600" repeatCount="indefinite" /> 
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
   from="1" to="200" repeatCount="indefinite" />
 </circle>-->
 <ellipse cx="130" cy="130" rx="300" ry="200" fill="none" id="image-ellipse"
   stroke-dashoffset="0"
   stroke-width="800" 
   stroke-dasharray="20"
   stroke="#555"
   filter="url(#image-filter-1)"
   style="fill: none; stroke-opacity: 1">
   <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="40s"
   from="1" to="1500" repeatCount="indefinite" />
 </ellipse>
 </g>
<!-- <rect id="middle-left-rect" x="10" y="10" rx="80" ry="100"
  height="300" width="270" fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  stroke-dasharray="30"
  stroke-width="10"
  stroke-dashoffset="15"
  stroke="#ffa">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="60" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="20s"
   from="1" to="10" repeatCount="indefinite" />
 </rect>-->
 
 </g>
 </g><!-- end scale -->
 <text x="40" y="600" ><a xlink:href="image-deform-7.html">More Examples Like This</a></text>
 
<g transform="translate(300,320)" id="middle-middle-cell" class="cell">
<g transform="translate(45,55)">

 <circle cx="100" cy="100" r="50" fill="none" stroke-width="10" 
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-53);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="40" dur="7s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="0s" dur="13s"
   from="1" to="200" repeatCount="indefinite" /> 
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
   from="1" to="200" repeatCount="indefinite" />
 </circle>
 <circle cx="100" cy="100" r="50" fill="none" stroke-width="10" 
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-50);"><!-- was #afa -->
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="40" dur="5s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="10s" dur="10s"
   from="10" to="100" repeatCount="indefinite" />
 </circle>
 </g>
 <rect id="middle-middle-rect" x="10" y="10" height="300" width="270" fill="none" stroke-linecap="round"  stroke-linejoin="round"
  style="stroke-dasharray: 30 30; stroke-width: 10; stroke: #ffa;" stroke-dashoffset="15">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="-60" dur="3s" repeatCount="indefinite" />
 </rect>
</g>

<g transform="translate(600,320)" id="middle-right-cell" class="cell">
<g transform="translate(20,25)">
 <circle cx="130" cy="130" r="50" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: url(#radial-grad-52); stroke-opacity: 1">
   <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="10s"
   from="1" to="200" repeatCount="indefinite" />
 </circle>

 </g>
 <rect id="middle-right-rect" x="10" y="10" height="300" width="270" fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  stroke-dasharray="30"
  stroke-width="10"
  stroke-dashoffset="15"
  stroke="#ffa">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="60" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width-2"
     begin="0s" from="10" to="100" dur="15s" repeatCount="indefinite" />
 </rect>
 </g>

<!-- row 3 -->
<g transform="translate(0,640)" id="bottom-left-cell"  class="cell">
<g transform="translate(30,30)">
 <circle cx="130" cy="130" r="50" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: url(#radial-grad-54); stroke-opacity: 1">
 <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-dasharray" begin="15s" dur="10s"
    from="20" to="100" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="3s" dur="10s"
    from="10" to="100" repeatCount="indefinite" />
 </circle>
 <circle cx="100" cy="100" r="50" fill="none"
   stroke-width="10" 
   style="stroke-dasharray: 20; stroke: url(#radial-grad-54);">
   <animate attributeName="stroke-dashoffset" begin="0s"
    from="0" to="-40" dur="2s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="10s" dur="10s"
   from="10" to="100" repeatCount="indefinite" />
 </circle>
 </g>
 <rect id="bottom-left-rect" x="10" y="10" height="300" width="270" fill="none"
  stroke-linecap="round"
  stroke-dashoffset="0"
  stroke-width="15"
  stroke-dasharray="1 30"
  style="stroke: url(#radial-grad-54);" >
  <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="31" dur="1s" repeatCount="indefinite" />
 
 </rect>
</g>

<g transform="translate(300,640)" id="bottom-middle-cell" class="cell">
<g transform="translate(45,55)">

 <circle cx="100" cy="100" r="50" rx="50" ry="70" fill="none" stroke-width="10" 
   style="stroke-dasharray: 20;
   stroke: url(#radial-grad-55);">
  <animate attributeName="stroke-dashoffset" begin="0s"
   from="0" to="-40" dur="7s" repeatCount="indefinite" />
  <animate attributeName="stroke-width" begin="10s" dur="11s"
   from="10" to="200" repeatCount="indefinite" />
  <animate attributeName="stroke-dasharray" begin="7s" dur="19s"
   from="10" to="200" repeatCount="indefinite" />
  <animate attributeName="r" begin="25s" dur="15s" 
   from="50" to="1" repeatCount="indefinite" />
 </circle>
 </g>
 <rect id="bottom-middle-rect" x="10" y="10" rx="20" ry="80"
  height="300" width="270" fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  style="stroke-dasharray: 30 30; stroke-width: 10; stroke: #ffa;" stroke-dashoffset="15">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="-60" dur="3s" repeatCount="indefinite" />
 </rect>
</g>

<g transform="translate(600,640)" id="bottom-right-cell" class="cell">
<g transform="translate(20,25)">
 <ellipse cx="130" cy="130" rx="50" ry="70" fill="none"
   stroke-dashoffset="0"
   stroke-width="10" 
   stroke-dasharray="20"
   style="stroke: url(#radial-grad-bright); stroke-opacity: 1">
   <animate attributeName="stroke-dashoffset"
    begin="0s" from="0" to="40" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="20s"
   from="1" to="400" repeatCount="indefinite" />
 </ellipse>

 </g>
 <rect id="bottom-right-rect" x="10" y="10" rx="80" ry="100"
  height="300" width="270" fill="none"
  stroke-linecap="round"
  stroke-linejoin="round"
  stroke-dasharray="30"
  stroke-width="10"
  stroke-dashoffset="15"
  stroke="#ffa">
   <animate attributeName="stroke-dashoffset"
     begin="0s" from="0" to="60" dur="3s" repeatCount="indefinite" />
   <animate attributeName="stroke-width" begin="5s" dur="20s"
   from="1" to="10" repeatCount="indefinite" />
 </rect>
 </g>


<!-- end of cells -->
    </g><!-- end rotate -->
   </g><!-- end skewY -->
  </g><!-- end skewX -->
 </g><!-- end translate -->


<!--<image id="imageX" xlink:href="../images/Butterfly%2062.jpg" 
    height="100%" width="100%" x="500" y="200" />-->
</svg>
<!-- here comes the script    -->
<script>

$(document).ready(function() {
	Log.Hide();
});

</script>
<div id="font-form" class="font-form-on">
<div id="panel">
<form id="distort-font">
<fieldset>
<legend>General Animation Options</legend>
<ul>
 <li><label for="imageChoice">Select Image</label> <select id="imageChoice" name="imageChoice" onChange="SvgTransform.changeImage('imageChoice', '#imageX', '#imageFilter'); adjustImage('imageX','image-ellipse');">

<option value="http://ic00408/images/Butterfly%206.jpg" selected="selected">Butterfly 6</option>
<option value="http://ic00408/images/Butterfly%2017a.jpg">Butterfly 17a</option>
<option value="http://ic00408/images/Butterfly%2028.jpg">Butterfly 28</option>
<option value="http://ic00408/images/Butterfly%2057.jpg">Butterfly 57</option>
<option value="http://ic00408/images/Butterfly%2062.jpg">Butterfly 62</option>
<option value="http://ic00408/images/Butterfly%2086.jpg">Butterfly 86</option>
<option value="http://ic00408/images/Grasshopper%201.JPG">Grasshopper 1</option>
<option value="http://ic00408/images/Ladybug%206.jpg">Ladybug 6</option>
<option value="http://ic00408/images/building-1.jpg">Building 1</option>
<option value="http://ic00408/images/sphinx5.jpg">Sphinx 5</option>
<option value="http://ic00408/images/egypt-2.jpg">Egypt 2</option>
<option value="http://ic00408/images/EgyptianTomb.jpg">Egyptian Tomb</option>
<option value="http://ic00408/images/stone-hut-1.jpg">Stone Hut 1</option>
<option value="http://ic00408/images/stone-wall-1.jpg">Stone Wall 1</option>
<option value="http://ic00408/images/stone-arch-1.jpg">Stone Arch 1</option>
<option value="http://ic00408/images/igloo2.jpg">Igloo 2</option>
<option value="http://ic00408/images/rotunda-statue.jpg">Rotunda Statue</option>
<option value="http://ic00408/images/staircase-1.jpg">Spiral Staircase 1</option>
<option value="http://ic00408/images/red-fence-1.jpg">Red Fence 1</option>
<option value="http://ic00408/images/palace-1.jpg">Palace 1</option>
<option value="http://ic00408/images/london-plaza-1.jpg">London Plaza 1</option>
<option value="http://ic00408/images/glass-pyramids.jpg">Glass Pyramid</option>
<option value="http://ic00408/images/old-man-with-hat.jpg">Old Man with Hat</option>
<option value="http://ic00408/images/Woman-183.jpg">Woman 183</option>
<option value="http://ic00408/images/Woman-214.jpg">Woman 214</option>
</select>
 </li>
 <li class="expand">
  <label for="skew-x">SkewX:</label>
  <input id="skew-x" name="skew-x" type="range" min="-90" max="90" value="0" size="1"
         onBlur="SvgTransform.skewX('skew-x', '#skewX');SvgTransform.SvgText('skew-x','#skew-x-value');" 
         onChange="SvgTransform.skewX('skew-x', '#skewX');SvgTransform.SvgText('skew-x','#skew-x-value');">
  <span id="skew-x-value"></span>
 </li>
 <li class="expand">
  <label for="skew-y">SkewY:</label>
  <input id="skew-y" name="skew-y" type="range" min="-90" max="90" value="0" size="1"
         onBlur="SvgTransform.skewY('skew-y', '#skewY');SvgTransform.SvgText('skew-y','#skew-y-value');"
         onChange="SvgTransform.skewY('skew-y', '#skewY');SvgTransform.SvgText('skew-y','#skew-y-value');">
  <span id="skew-y-value"></span>
 </li>
 <li class="expand">
  <label for="trans-x">TransX:</label>
  <input id="trans-x" name="trans-x" type="range" min="-1000" max="1000" value="0" size="1"
         onBlur="SvgTransform.translateX('trans-x', '#translate');SvgTransform.SvgText('trans-x','#trans-x-value');"
         onChange="SvgTransform.translateX('trans-x', '#translate');SvgTransform.SvgText('trans-x','#trans-x-value');">
  <span id="trans-x-value"></span>
 </li>
 <li class="expand">
  <label for="trans-y">TransY:</label>
  <input id="trans-y" name="trans-y" type="range" min="-1000" max="1000" value="0" size="1"
         onBlur="SvgTransform.translateY('trans-y', '#translate');SvgTransform.SvgText('trans-y','#trans-y-value');"
         onChange="SvgTransform.translateY('trans-y', '#translate');SvgTransform.SvgText('trans-y','#trans-y-value');">
  <span id="trans-y-value"></span>
 </li>
 <li class="expand">
  <label for="rotate-angle">Rotate:</label>
  <input id="rotate-angle" name="rotate-angle" type="range" min="-180" max="180" value="0" size="1"
         onBlur="SvgTransform.rotate('rotate-angle', '#rotate');SvgTransform.SvgText('rotate-angle','#rotate-angle-value');"
         onChange="SvgTransform.rotate('rotate-angle', '#rotate');SvgTransform.SvgText('rotate-angle','#rotate-angle-value');">
  <span id="rotate-angle-value"></span>
 </li>
 <li class="expand">
  <label for="rotate-cx">Cx:</label>
  <input id="rotate-cx" name="rotate-cx" type="range" min="0" max="1000" value="100" size="1"
         onBlur="SvgTransform.rotate('rotate-cx', '#rotate');SvgTransform.SvgText('rotate-cx','#rotate-cx-value');"
         onChange="SvgTransform.rotate('rotate-cx', '#rotate');SvgTransform.SvgText('rotate-cx','#rotate-cx-value');">
  <span id="rotate-cx-value"></span>
 </li>
 <li class="expand">
  <label for="rotate-cy">Cy:</label>
  <input id="rotate-cy" name="rotate-cy" type="range" min="0" max="1000" value="200" size="1"
         onBlur="SvgTransform.rotate('rotate-cy', '#rotate');SvgTransform.SvgText('rotate-cy','#rotate-cy-value');"
         onChange="SvgTransform.rotate('rotate-cy', '#rotate');SvgTransform.SvgText('rotate-cy','#rotate-cy-value');">
  <span id="rotate-cy-value"></span>
 </li>
 </ul>
</fieldset>
</form>
</div><!-- end panel div -->
</div><!-- end font-form div -->
</body>


</html>