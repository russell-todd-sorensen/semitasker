
proc vat_dirlist {filename} {
    set url [ns_conn url]
    set dir $filename
    set directories [list]
    set files [list]
    #
    # Handle special case of AOLpress MiniWebs.
    #

    if {[nsv_get _ns_fastpath toppage] && [_ns_ismw $dir]} {
        set nvd [_ns_getnvd $dir]
        if [_ns_isaolpress] {
            return [ns_returnfile 200 application/x-navidoc $file]
        }
        set fp [open $nvd]
        while {[gets $fp line] >= 0} {
            if [string match Pages:* $line] {
                break
            }
        }
        gets $fp line
        close $fp
        set file [lindex [split $line \"] 1]
        if [file exists $dir/$file] {
            return [ns_returnredirect $file]
        }
    }

    #
    # Handle default case of directory listing.  Simple
    # format is just the files while fancy includes
    # the size and modify time (which is more expensive).
    #
    set type [ns_config "ns/server/[ns_info server]" directorylisting none]
    ns_log Debug "vat_dirlist: url: '$url', type: '$type'"
    switch $type {
        simple {
            set simple 1
            set list_join "</p>\n<p>"
        }
        fancy {
            set simple 0
            set list_join "\n"
        }
        none -
        default {
            return [ns_returnnotfound]
        }
    }

    set hidedot [nsv_get _ns_fastpath hidedot]
    set location [ns_conn location]

    set prefix "${location}${url}"
    set up "<p><a href=\"..\" class=\"expanded\"><span class=\"alt\">\[file\]</span></a>
    <a href=..>..</a></p>"
    if $simple {
        lappend directories "
<div class=\"filebrowse-alt\">
$up"
    } else {
        lappend directories "
<table>
<tr align=left><th>File</th><th>Size</th><th>Date</th></tr>
<tr align=left><td colspan=3 class=\"filebrowse-alt\">$up</td></tr>
"
    }
    set simple_list [list]
    set fancy_list [list]
    foreach f [lsort [glob -nocomplain $dir/*]] {
        set tail [file tail $f]
        if {$hidedot && [string match .* $tail]} {
            continue
        }
        set isdirectory [file isdirectory $f]
	if {$isdirectory} {
	    set link_list directories
	    set link "<a href=\"${prefix}${tail}/\" class=\"leafnode\">
    <span class=\"alt\">\[file\]</span></a><a href=\"${prefix}${tail}/\">${tail}</a>"
	} else {
            set link_list files
	    set link "<a href=\"${prefix}${tail}\" class=\"leaf\">
    <span class=\"alt\">\[/\]</span></a><a href=\"${prefix}${tail}\">${tail}</a>"
        }
	if $simple {
            #append list $link\n
	    lappend simple_list $link
        } else {

            if [catch {
                file stat $f stat
            } errMsg ] {
              #  append list "
#<tr align=left><td>$link</td><td>N/A</td><td>N/A</td></tr>\n
#"
		    lappend $link_list "
<tr  align=left><td>$link</td><td>N/A</td><td>N/A</td></tr>\n
"
            } else {
                set size [expr $stat(size) / 1000 + 1]K
                set mtime $stat(mtime)
                set time [clock format $mtime -format "%d-%h-%Y %H:%M"]
        #        append list "
#<tr align=left><td class=\"filebrowse-alt\">$link</td><td>$size</td><td>$time</td></tr>\n
#"
		lappend $link_list "
<tr align=left><td class=\"filebrowse-alt\">$link</td><td>$size</td><td>$time</td></tr>\n
"

            }
        }
    }
    if $simple {
       lappend files "</div>"
    } else {
       lappend files "</table>"
    }
    ns_returnnotice 200 $url "
<style type=\"text/css\">
/* <!\[CDATA\[ */ 
@import \"/css/tigris.css\"; 
/*  \]\]> */
</style>

[join $directories $list_join]
[join $files $list_join]"
}

